"""empty message

Revision ID: 0a11c2b9cf5c
Revises: 
Create Date: 2017-03-01 21:44:08.720832

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '0a11c2b9cf5c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('biography', sa.Text(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('deathday', sa.Date(), nullable=True),
    sa.Column('homepage', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('place_of_birth', sa.Text(), nullable=True),
    sa.Column('profile_path', sa.Text(), nullable=True),
    sa.Column('imdb_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('iso_3166_1', sa.String(length=2), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_iso_3166_1'), 'country', ['iso_3166_1'], unique=True)
    op.create_table('genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('genre', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('genre')
    )
    op.create_table('movie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('budget', sa.BigInteger(), nullable=True),
    sa.Column('imdb_id', sa.Text(), nullable=True),
    sa.Column('revenue', sa.BigInteger(), nullable=True),
    sa.Column('backdrop_path', sa.Text(), nullable=True),
    sa.Column('poster_path', sa.Text(), nullable=True),
    sa.Column('adult', sa.Boolean(), nullable=True),
    sa.Column('original_language', sa.Text(), nullable=True),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('tagline', sa.Text(), nullable=True),
    sa.Column('homepage', sa.Text(), nullable=True),
    sa.Column('avg_rating', sa.Integer(), nullable=True),
    sa.Column('rating_sum', sa.Integer(), nullable=True),
    sa.Column('num_ratings', sa.Integer(), nullable=True),
    sa.Column('num_members', sa.Integer(), nullable=True),
    sa.Column('num_favourites', sa.Integer(), nullable=True),
    sa.Column('num_completed', sa.Integer(), nullable=True),
    sa.Column('num_ptw', sa.Integer(), nullable=True),
    sa.Column('num_custom', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('pw_hash', sa.String(length=128), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('fav_genre', sa.String(length=64), nullable=True),
    sa.Column('join_date', sa.Date(), nullable=True),
    sa.Column('last_online', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('website', sa.String(length=64), nullable=True),
    sa.Column('about', sa.String(length=256), nullable=True),
    sa.Column('profile_views', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_name', sa.Text(), nullable=True),
    sa.Column('actor_name', sa.Text(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('profile_path', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('cast_id', sa.Integer(), nullable=True),
    sa.Column('credit_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('body', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_list',
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('creation_ts', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favourite',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('ordering', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'movie_id')
    )
    op.create_table('flicks_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friendship',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    op.create_table('movie_country_lnk',
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], )
    )
    op.create_table('movie_genre_lnk',
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('genre_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], )
    )
    op.create_table('recommendation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=500), nullable=True),
    sa.Column('recommendation_from', sa.Integer(), nullable=True),
    sa.Column('recommendation_to', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['recommendation_from'], ['movie.id'], ),
    sa.ForeignKeyConstraint(['recommendation_to'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=10000), nullable=True),
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('video',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site', sa.Text(), nullable=True),
    sa.Column('key', sa.Text(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('iso_639_1', sa.String(length=2), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_list_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('list_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=64), nullable=True),
    sa.Column('ordering', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['list_id'], ['custom_list.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flicks_list_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=True),
    sa.Column('list_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=64), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['list_id'], ['flicks_list.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('flicks_list_item')
    op.drop_table('custom_list_item')
    op.drop_table('video')
    op.drop_table('review')
    op.drop_table('recommendation')
    op.drop_table('movie_genre_lnk')
    op.drop_table('movie_country_lnk')
    op.drop_table('friendship')
    op.drop_table('flicks_list')
    op.drop_table('favourite')
    op.drop_table('custom_list')
    op.drop_table('comment')
    op.drop_table('character')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_table('movie')
    op.drop_table('genre')
    op.drop_index(op.f('ix_country_iso_3166_1'), table_name='country')
    op.drop_table('country')
    op.drop_table('actor')
    # ### end Alembic commands ###
